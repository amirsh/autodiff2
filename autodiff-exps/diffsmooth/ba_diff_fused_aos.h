#ifndef __USECASES_BA_D_H__ 
#define __USECASES_BA_D_H__ 
#include "fsharp.h"
#include <stdio.h>
#include <math.h>

array_number_t TOP_LEVEL_usecases_ba_project_d(array_number_t cam, array_number_t x, array_number_t camd, array_number_t xd) {
  number_t x6045 = (cam->arr[0]);
  number_t x6043 = (camd->arr[0]);
  number_t x6041 = (x6045) * (x6045);
  number_t x6037 = (x6043) * (x6045);
  number_t x6038 = (x6045) * (x6043);
  number_t x6039 = (x6037) + (x6038);
  number_t x6035 = (0) + (x6041);
  number_t x6033 = (0) + (x6039);
  number_t x6031 = (cam->arr[1]);
  number_t x6029 = (camd->arr[1]);
  number_t x6027 = (x6031) * (x6031);
  number_t x6023 = (x6029) * (x6031);
  number_t x6024 = (x6031) * (x6029);
  number_t x6025 = (x6023) + (x6024);
  number_t x6021 = (x6035) + (x6027);
  number_t x6019 = (x6033) + (x6025);
  number_t x6017 = (cam->arr[2]);
  number_t x6015 = (camd->arr[2]);
  number_t x6013 = (x6017) * (x6017);
  number_t x6009 = (x6015) * (x6017);
  number_t x6010 = (x6017) * (x6015);
  number_t x6011 = (x6009) + (x6010);
  number_t x6007 = (x6021) + (x6013);
  number_t x6005 = (x6019) + (x6011);
  index_t x5634 = (x6007) != (0);
  array_tuple_number_t_number_t x6003;
  if (x5634) {
    number_t x5903 = sqrt(x6007);
    number_t x5899 = (1) / (x5903);
    number_t x5900 = (x5899) * (0.5);
    number_t x5901 = (x6005) * (x5900);
    number_t x5893 = -(x5901);
    number_t x5894 = (x5903) * (x5903);
    number_t x5895 = (x5893) / (x5894);
    number_t x5891 = (x->arr[5]);
    number_t x5889 = (xd->arr[5]);
    number_t x5887 = (cam->arr[5]);
    number_t x5885 = (camd->arr[5]);
    number_t x5883 = (x6031) * (x5899);
    number_t x5879 = (x6029) * (x5899);
    number_t x5880 = (x6031) * (x5895);
    number_t x5881 = (x5879) + (x5880);
    number_t x5877 = (x5891) - (x5887);
    number_t x5875 = (x5889) - (x5885);
    number_t x5873 = (x->arr[4]);
    number_t x5871 = (xd->arr[4]);
    number_t x5869 = (cam->arr[4]);
    number_t x5867 = (camd->arr[4]);
    number_t x5865 = (x6017) * (x5899);
    number_t x5861 = (x6015) * (x5899);
    number_t x5862 = (x6017) * (x5895);
    number_t x5863 = (x5861) + (x5862);
    number_t x5859 = (x5873) - (x5869);
    number_t x5857 = (x5871) - (x5867);
    number_t x5855 = (x5883) * (x5877);
    number_t x5851 = (x5881) * (x5877);
    number_t x5852 = (x5883) * (x5875);
    number_t x5853 = (x5851) + (x5852);
    number_t x5849 = (x5865) * (x5859);
    number_t x5845 = (x5863) * (x5859);
    number_t x5846 = (x5865) * (x5857);
    number_t x5847 = (x5845) + (x5846);
    number_t x5843 = (x->arr[3]);
    number_t x5841 = (xd->arr[3]);
    number_t x5839 = (cam->arr[3]);
    number_t x5837 = (camd->arr[3]);
    number_t x5835 = (x5843) - (x5839);
    number_t x5833 = (x5841) - (x5837);
    number_t x5831 = (x6045) * (x5899);
    number_t x5827 = (x6043) * (x5899);
    number_t x5828 = (x6045) * (x5895);
    number_t x5829 = (x5827) + (x5828);
    number_t x5825 = (x5865) * (x5835);
    number_t x5821 = (x5863) * (x5835);
    number_t x5822 = (x5865) * (x5833);
    number_t x5823 = (x5821) + (x5822);
    number_t x5819 = (x5831) * (x5877);
    number_t x5815 = (x5829) * (x5877);
    number_t x5816 = (x5831) * (x5875);
    number_t x5817 = (x5815) + (x5816);
    number_t x5813 = (x5831) * (x5859);
    number_t x5809 = (x5829) * (x5859);
    number_t x5810 = (x5831) * (x5857);
    number_t x5811 = (x5809) + (x5810);
    number_t x5807 = (x5883) * (x5835);
    number_t x5803 = (x5881) * (x5835);
    number_t x5804 = (x5883) * (x5833);
    number_t x5805 = (x5803) + (x5804);
    number_t x5787 = (x5855) - (x5849);
    number_t x5785 = (x5853) - (x5847);
    tuple_number_t_number_t x5783 = (tuple_number_t_number_t){._1=x5787, ._2=x5785};
    number_t x5793 = (x5825) - (x5819);
    number_t x5791 = (x5823) - (x5817);
    tuple_number_t_number_t x5789 = (tuple_number_t_number_t){._1=x5793, ._2=x5791};
    number_t x5799 = (x5813) - (x5807);
    number_t x5797 = (x5811) - (x5805);
    tuple_number_t_number_t x5795 = (tuple_number_t_number_t){._1=x5799, ._2=x5797};
    array_tuple_number_t_number_t x5801 = (array_tuple_number_t_number_t)storage_alloc(sizeof(int) * 2);x5801->length=3;x5801->arr = (tuple_number_t_number_t*)storage_alloc(sizeof(tuple_number_t_number_t) * 3);
    x5801->arr[0] = x5783;
    x5801->arr[1] = x5789;
    x5801->arr[2] = x5795;
    number_t x5769 = (x5831) * (x5835);
    number_t x5765 = (x5829) * (x5835);
    number_t x5766 = (x5831) * (x5833);
    number_t x5767 = (x5765) + (x5766);
    number_t x5763 = (0) + (x5769);
    number_t x5761 = (0) + (x5767);
    number_t x5747 = (x5883) * (x5859);
    number_t x5743 = (x5881) * (x5859);
    number_t x5744 = (x5883) * (x5857);
    number_t x5745 = (x5743) + (x5744);
    number_t x5741 = (x5763) + (x5747);
    number_t x5739 = (x5761) + (x5745);
    number_t x5725 = (x5865) * (x5877);
    number_t x5721 = (x5863) * (x5877);
    number_t x5722 = (x5865) * (x5875);
    number_t x5723 = (x5721) + (x5722);
    number_t x5719 = (x5741) + (x5725);
    number_t x5717 = (x5739) + (x5723);
    number_t x5715 = cos(x5903);
    number_t x5711 = sin(x5903);
    number_t x5712 = -(x5711);
    number_t x5713 = (x5901) * (x5712);
    number_t x5709 = (1) - (x5715);
    number_t x5707 = -(x5713);
    index_t x5635 = (x)->length;
    array_tuple_number_t_number_t x5706 = (array_tuple_number_t_number_t)storage_alloc(sizeof(int) * 2);x5706->length=x5635;x5706->arr = (tuple_number_t_number_t*)storage_alloc(sizeof(tuple_number_t_number_t) * x5635);
    for(int x5055 = 0; x5055 < x5706->length; x5055++){
      index_t x5704 = (x5055) + (3);
      number_t x5702 = (x->arr[x5704]);
      number_t x5700 = (xd->arr[x5704]);
      number_t x5698 = (cam->arr[x5704]);
      number_t x5696 = (camd->arr[x5704]);
      number_t x5694 = (x5702) - (x5698);
      number_t x5692 = (x5700) - (x5696);
      tuple_number_t_number_t x5690 = (x5801->arr[x5055]);
      number_t x5688 = (x5690)._1;
      number_t x5686 = (x5690)._2;
      number_t x5682 = (x5901) * (x5715);
      number_t x5678 = (x5694) * (x5715);
      number_t x5674 = (x5692) * (x5715);
      number_t x5675 = (x5694) * (x5713);
      number_t x5676 = (x5674) + (x5675);
      number_t x5672 = (x5688) * (x5711);
      number_t x5668 = (x5686) * (x5711);
      number_t x5669 = (x5688) * (x5682);
      number_t x5670 = (x5668) + (x5669);
      number_t x5666 = (cam->arr[x5055]);
      number_t x5664 = (camd->arr[x5055]);
      number_t x5662 = (x5666) * (x5899);
      number_t x5658 = (x5664) * (x5899);
      number_t x5659 = (x5666) * (x5895);
      number_t x5660 = (x5658) + (x5659);
      number_t x5656 = (x5719) * (x5709);
      number_t x5652 = (x5717) * (x5709);
      number_t x5653 = (x5719) * (x5707);
      number_t x5654 = (x5652) + (x5653);
      number_t x5650 = (x5678) + (x5672);
      number_t x5648 = (x5676) + (x5670);
      number_t x5646 = (x5662) * (x5656);
      number_t x5642 = (x5660) * (x5656);
      number_t x5643 = (x5662) * (x5654);
      number_t x5644 = (x5642) + (x5643);
      number_t x5640 = (x5650) + (x5646);
      number_t x5638 = (x5648) + (x5644);
      tuple_number_t_number_t x5636 = (tuple_number_t_number_t){._1=x5640, ._2=x5638};
      x5706->arr[x5055] = x5636;
      
    }
    x6003 = x5706;
  } else {
    index_t j = 1;
    index_t j0 = 2;
    number_t x5999 = (x->arr[5]);
    number_t x5997 = (xd->arr[5]);
    number_t x5995 = (cam->arr[5]);
    number_t x5993 = (camd->arr[5]);
    number_t x5991 = (x5999) - (x5995);
    number_t x5989 = (x5997) - (x5993);
    number_t x5987 = (x->arr[4]);
    number_t x5985 = (xd->arr[4]);
    number_t x5983 = (cam->arr[4]);
    number_t x5981 = (camd->arr[4]);
    number_t x5979 = (x5987) - (x5983);
    number_t x5977 = (x5985) - (x5981);
    number_t x5975 = (x5995) * (x5991);
    number_t x5971 = (x5993) * (x5991);
    number_t x5972 = (x5995) * (x5989);
    number_t x5973 = (x5971) + (x5972);
    number_t x5969 = (x5983) * (x5979);
    number_t x5965 = (x5981) * (x5979);
    number_t x5966 = (x5983) * (x5977);
    number_t x5967 = (x5965) + (x5966);
    number_t x5963 = (x->arr[3]);
    number_t x5961 = (xd->arr[3]);
    number_t x5959 = (cam->arr[3]);
    number_t x5957 = (camd->arr[3]);
    number_t x5955 = (x5963) - (x5959);
    number_t x5953 = (x5961) - (x5957);
    number_t x5951 = (x5959) * (x5955);
    number_t x5947 = (x5957) * (x5955);
    number_t x5948 = (x5959) * (x5953);
    number_t x5949 = (x5947) + (x5948);
    number_t x5931 = (x5975) - (x5969);
    number_t x5929 = (x5973) - (x5967);
    tuple_number_t_number_t x5927 = (tuple_number_t_number_t){._1=x5931, ._2=x5929};
    number_t x5937 = (x5951) - (x5975);
    number_t x5935 = (x5949) - (x5973);
    tuple_number_t_number_t x5933 = (tuple_number_t_number_t){._1=x5937, ._2=x5935};
    number_t x5943 = (x5969) - (x5951);
    number_t x5941 = (x5967) - (x5949);
    tuple_number_t_number_t x5939 = (tuple_number_t_number_t){._1=x5943, ._2=x5941};
    array_tuple_number_t_number_t x5945 = (array_tuple_number_t_number_t)storage_alloc(sizeof(int) * 2);x5945->length=3;x5945->arr = (tuple_number_t_number_t*)storage_alloc(sizeof(tuple_number_t_number_t) * 3);
    x5945->arr[0] = x5927;
    x5945->arr[1] = x5933;
    x5945->arr[2] = x5939;
    index_t x5905 = (x)->length;
    array_tuple_number_t_number_t x5926 = (array_tuple_number_t_number_t)storage_alloc(sizeof(int) * 2);x5926->length=x5905;x5926->arr = (tuple_number_t_number_t*)storage_alloc(sizeof(tuple_number_t_number_t) * x5905);
    for(int x4619 = 0; x4619 < x5926->length; x4619++){
      tuple_number_t_number_t x5924 = (x5945->arr[x4619]);
      number_t x5922 = (x->arr[x4619]);
      number_t x5920 = (xd->arr[x4619]);
      number_t x5918 = (x5924)._1;
      number_t x5916 = (x5924)._2;
      number_t x5914 = (x5922) - (x5918);
      number_t x5912 = (x5920) - (x5916);
      number_t x5910 = (x5914) + (x5918);
      number_t x5908 = (x5912) + (x5916);
      tuple_number_t_number_t x5906 = (tuple_number_t_number_t){._1=x5910, ._2=x5908};
      x5926->arr[x4619] = x5906;
      
    }
    x6003 = x5926;
  }
  tuple_number_t_number_t x5632 = (x6003->arr[2]);
  number_t x5630 = (x5632)._1;
  number_t x5628 = (x5632)._2;
  tuple_number_t_number_t x5626 = (x6003->arr[0]);
  number_t x5624 = (x5626)._1;
  number_t x5622 = (x5626)._2;
  number_t x5620 = (1) / (x5630);
  number_t x5616 = -(x5628);
  number_t x5617 = (x5630) * (x5630);
  number_t x5618 = (x5616) / (x5617);
  number_t x5614 = (x5624) * (x5620);
  number_t x5610 = (x5622) * (x5620);
  number_t x5611 = (x5624) * (x5618);
  number_t x5612 = (x5610) + (x5611);
  number_t x5608 = (x5614) * (x5614);
  number_t x5604 = (x5612) * (x5614);
  number_t x5605 = (x5614) * (x5612);
  number_t x5606 = (x5604) + (x5605);
  number_t x5602 = (0) + (x5608);
  number_t x5600 = (0) + (x5606);
  tuple_number_t_number_t x5598 = (x6003->arr[1]);
  number_t x5596 = (x5598)._1;
  number_t x5594 = (x5598)._2;
  number_t x5592 = (x5596) * (x5620);
  number_t x5588 = (x5594) * (x5620);
  number_t x5589 = (x5596) * (x5618);
  number_t x5590 = (x5588) + (x5589);
  number_t x5586 = (x5592) * (x5592);
  number_t x5582 = (x5590) * (x5592);
  number_t x5583 = (x5592) * (x5590);
  number_t x5584 = (x5582) + (x5583);
  number_t x5580 = (x5602) + (x5586);
  number_t x5578 = (x5600) + (x5584);
  number_t x5576 = (cam->arr[9]);
  number_t x5574 = (camd->arr[9]);
  number_t x5572 = (x5576) * (x5580);
  number_t x5568 = (x5574) * (x5580);
  number_t x5569 = (x5576) * (x5578);
  number_t x5570 = (x5568) + (x5569);
  number_t x5566 = (cam->arr[10]);
  number_t x5564 = (camd->arr[10]);
  number_t x5562 = (x5566) * (x5580);
  number_t x5558 = (x5564) * (x5580);
  number_t x5559 = (x5566) * (x5578);
  number_t x5560 = (x5558) + (x5559);
  number_t x5556 = (1) + (x5572);
  number_t x5554 = (0) + (x5570);
  number_t x5552 = (x5562) * (x5580);
  number_t x5548 = (x5560) * (x5580);
  number_t x5549 = (x5562) * (x5578);
  number_t x5550 = (x5548) + (x5549);
  index_t j00 = 6;
  index_t x5510 = 2;
  array_number_t x5546 = (array_number_t)storage_alloc(sizeof(int) * 2);x5546->length=x5510;x5546->arr = (number_t*)storage_alloc(sizeof(number_t) * x5510);
  for(int i = 0; i < x5546->length; i++){
    index_t x5544 = (i) + (7);
    tuple_number_t_number_t x5542 = (x6003->arr[i]);
    number_t x5540 = (x5542)._1;
    number_t x5538 = (x5542)._2;
    number_t x5536 = (cam->arr[x5544]);
    number_t x5534 = (camd->arr[x5544]);
    number_t x5532 = (x5540) * (x5536);
    number_t x5528 = (x5538) * (x5536);
    number_t x5529 = (x5540) * (x5534);
    number_t x5530 = (x5528) + (x5529);
    number_t x5526 = (x5556) + (x5552);
    number_t x5524 = (x5554) + (x5550);
    number_t x5522 = (x5532) * (x5526);
    number_t x5518 = (x5530) * (x5526);
    number_t x5519 = (x5532) * (x5524);
    number_t x5520 = (x5518) + (x5519);
    number_t x5516 = (x5522) * (x5536);
    number_t x5359 = x5516;
    number_t x5512 = (x5520) * (x5536);
    number_t x5513 = (x5522) * (x5534);
    number_t x5514 = (x5512) + (x5513);
    number_t x5511 = (x5534) + (x5514);
    x5546->arr[i] = x5511;
    
  }
  return x5546;
}

#endif